 IDENTIFICATION DIVISION.
       PROGRAM-ID. CBSCSPYT.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
        01 WS-ERROR-CODE PIC 9(12).
        01 WS-ACCOUNT-NO-T PIC S9(18).
        01 WS-DEBIT-AMOUNT-T PIC S9(10)V9(2).
        01 WS-TIMESTAMP PIC X(26).
        01 WS-DATETIME PIC X(21).
        01 WS-TRANID PIC X(16).
        01 WS-DATE PIC X(10).
        01 WS-TIME PIC X(08).
           EXEC SQL
           INCLUDE CBSMST
           END-EXEC.
           EXEC SQL
           INCLUDE CBSBAL
           END-EXEC.
           EXEC SQL
           INCLUDE CBSHIS
           END-EXEC.
           EXEC SQL
           INCLUDE SQLCA
           END-EXEC.
      *     COPY AUTHREQ.
      *     COPY AUTHRES.
      * 77 MESSAGES PIC X(35).
       LINKAGE SECTION.
       01 DFHCOMMAREA.
           02 CSPYREQ.
           COPY CSPYREQ.
           02 CSPYRES REDEFINES CSPYREQ.
           COPY CSPYRES.
       PROCEDURE DIVISION.
      *     MOVE LOW-VALUES TO DCLCBS-ACCT-MSTR-DTFGL.
           MOVE FUNCTION CURRENT-DATE TO WS-DATETIME.
           DISPLAY WS-DATETIME.
           MOVE WS-DATETIME(1:16) TO WS-TRANID.
           DISPLAY "TRANSACTION-ID:" WS-TRANID.
           DISPLAY "BEGIN".
           DISPLAY "ACCOUNT-NO" ACCOUNT-NO.
           DISPLAY "DEBIT-AMOUNT" DEBIT-AMOUNT.
           MOVE ACCOUNT-NO TO WS-ACCOUNT-NO-T.
           COMPUTE WS-DEBIT-AMOUNT-T = DEBIT-AMOUNT.
           DISPLAY "WS-ACCOUNT-NO-T" WS-ACCOUNT-NO-T.
           MOVE SPACE TO CUSTOMER-NAME.
           MOVE SPACE TO SYS-DATE.
           MOVE SPACE TO SYS-TIME.
           DISPLAY 'BEFORE MOVE'.
           COMPUTE CUSTOMER-ID = 0.
           DISPLAY 'AFTER MOVE'.
           MOVE 0 TO AVAILABLE-BALANCE.
           MOVE 0 TO HOLD-BALANCE.
           MOVE 0 TO LEDGER-BL.
           PERFORM 1000-VALIDATION-PARA THRU 1000-VALIDATION-PARA-EXIT.
           PERFORM 2000-DATA-ACCES-PARA THRU 2000-DATA-ACCES-PARA-EXIT.
           PERFORM 5000-BUSINES-VAL-PRA THRU 5000-BUSINES-VAL-PRA-EXIT.
           PERFORM 9000-MAIN-PARA THRU 9000-MAIN-PARA-EXIT.
        1000-VALIDATION-PARA.
           DISPLAY 'VALIDATIONPARA'
           IF WS-ACCOUNT-NO-T = 0 THEN
              MOVE "ACCOUNT NUMBER SHOULD NOT BE NULL" TO MESSAGES
              EXEC CICS RETURN END-EXEC
           END-IF.
           DISPLAY 'VALIDATED ACCOUNT NUMBER'
           IF WS-DEBIT-AMOUNT-T = 0 THEN
           DISPLAY 'VALIDATING DEBIT-AMOUNT'
              MOVE "DEBIT AMOUNT SHOULD NOT BE NULL" TO MESSAGES
              EXEC CICS RETURN END-EXEC
           END-IF.
           DISPLAY "MESSAGES:" MESSAGES.
        1000-VALIDATION-PARA-EXIT.
            EXIT.
        2000-DATA-ACCES-PARA.
           COMPUTE H1-ACCOUNT-NUMBER = WS-ACCOUNT-NO-T.
           EXEC SQL
            SELECT * INTO :DCLCBS-ACCT-MSTR-DTL FROM CBS_ACCT_MSTR_DTL
            WHERE ACCOUNT_NUMBER= :H1-ACCOUNT-NUMBER
            END-EXEC.
            DISPLAY "SQLCODE:" SQLCODE
            EVALUATE SQLCODE
              WHEN 0
               DISPLAY H1-ACCOUNT-NUMBER
               DISPLAY H1-PAYMENT-LIMIT
               DISPLAY H1-ACCOUNT-STATUS
               DISPLAY H1-CUSTOMER-ID
               MOVE H1-ACCOUNT-NAME TO CUSTOMER-NAME
               COMPUTE CUSTOMER-ID = H1-CUSTOMER-ID
              WHEN 100
               MOVE "ACCT NO NOT REGISTERED WITH BANK" TO MESSAGES
               DISPLAY "MESSAGES" MESSAGES
               EXEC CICS RETURN END-EXEC
              WHEN OTHER
               DISPLAY "SQLCODE1:" SQLCODE
               MOVE "SQL ERROR1" TO MESSAGES
               DISPLAY "MESSAGES1:" MESSAGES
               EXEC CICS RETURN END-EXEC
            END-EVALUATE.
            EXEC SQL
            SELECT * INTO :DCLCBS-ACCT-BAL-DTL
            FROM CBS_ACCT_BAL_DTL
            WHERE CUSTOMER_ID= :H1-CUSTOMER-ID
            END-EXEC.
            DISPLAY "SQLCODE:" SQLCODE
            EVALUATE SQLCODE
              WHEN 0
               DISPLAY H2-CUSTOMER-ID
               DISPLAY H2-DEBIT-AMOUNT
               DISPLAY H2-AVAILABLE-BALANCE
               DISPLAY H2-LEDGER-BALANCE
               DISPLAY H2-HOLD-BALANCE
      *         MOVE H2-AVAILABLE-BALANCE TO WS-AVAILABLE-BALANCE
      *         MOVE H2-LEDGER-BALANCE TO WS-LEDGER-BL
      *         MOVE H2-HOLD-BALANCE TO WS-HOLD-BALANCE
              WHEN 100
               MOVE "CUSTOMER ID MISMATCHING" TO MESSAGES
               DISPLAY "MESSAGES" MESSAGES
               EXEC CICS RETURN END-EXEC
              WHEN OTHER
               DISPLAY "SQLCODE2:" SQLCODE
               MOVE "SQL ERROR2" TO MESSAGES
               DISPLAY "MESSAGES2:" MESSAGES
               EXEC CICS RETURN END-EXEC
            END-EVALUATE.
        2000-DATA-ACCES-PARA-EXIT.
             EXIT.
        5000-BUSINES-VAL-PRA.
            IF H1-ACCOUNT-STATUS IS NOT EQUAL TO 'ACTIVE   ' THEN
               MOVE 10 TO WS-ERROR-CODE
               PERFORM 1000-ERROR-PARA THRU 1000-ERROR-PARA-EXIT
            END-IF.
            IF WS-DEBIT-AMOUNT-T IS GREATER THAN H1-PAYMENT-LIMIT THEN
               MOVE 20 TO WS-ERROR-CODE
               PERFORM 1000-ERROR-PARA THRU 1000-ERROR-PARA-EXIT
            END-IF.
            IF WS-DEBIT-AMOUNT-T
            IS GREATER THAN H2-AVAILABLE-BALANCE THEN
               MOVE 30 TO WS-ERROR-CODE
               PERFORM 1000-ERROR-PARA THRU 1000-ERROR-PARA-EXIT
            END-IF.
        5000-BUSINES-VAL-PRA-EXIT.
           EXIT.
        9000-MAIN-PARA.
           MOVE WS-ACCOUNT-NO-T TO H3-ACCOUNT-NUMBER.
           MOVE WS-TRANID TO H3-TRANSACTION-ID.
           COMPUTE H2-AVAILABLE-BALANCE =
           H2-AVAILABLE-BALANCE - WS-DEBIT-AMOUNT-T.
      *     MOVE WS-AVAIL TO H2-AVAILABLE-BALANCE
           COMPUTE H2-LEDGER-BALANCE =
           H2-HOLD-BALANCE + H2-AVAILABLE-BALANCE
      *     MOVE WS-LEDGER-BL TO H2-LEDGER-BALANCE
           COMPUTE H2-DEBIT-AMOUNT = WS-DEBIT-AMOUNT-T
           EXEC SQL
            UPDATE CBS_ACCT_BAL_DTL
              SET AVAILABLE_BALANCE = :H2-AVAILABLE-BALANCE,
              LEDGER_BALANCE = :H2-LEDGER-BALANCE,
              DEBIT_AMOUNT = :H2-DEBIT-AMOUNT
      *        UPD_TIMESTAMP =:WS-TIMESTAMP
              WHERE CUSTOMER_ID = :H2-CUSTOMER-ID
           END-EXEC.
            DISPLAY"SQLCODE" SQLCODE
           EVALUATE SQLCODE
              WHEN 0
                COMPUTE AVAILABLE-BALANCE = H2-AVAILABLE-BALANCE
                COMPUTE HOLD-BALANCE =H2-HOLD-BALANCE
                COMPUTE LEDGER-BL = H2-LEDGER-BALANCE
                MOVE H3-TRANSACTION-ID TO TRANSACTION-ID
                MOVE "AMOUNT DEBITED SUCCESSFULLY" TO MESSAGES
              WHEN OTHER
                MOVE "AMOUNT DEBIT UNSUCCESSFULL" TO MESSAGES
                EXEC CICS RETURN END-EXEC
           END-EVALUATE.
           EXEC SQL
            INSERT INTO CBS_ACCT_TRAN_HSTRY_DTL
               VALUES (:H3-ACCOUNT-NUMBER, :H3-TRANSACTION-ID,
               :H2-DEBIT-AMOUNT,
               'DEBIT     ', 'SUCCESS   ')
           END-EXEC.
            DISPLAY"SQLCODE1" SQLCODE
           EVALUATE SQLCODE
      *     DISPLAY SQLCODE
      *     DISPLAY"INSERT"
              WHEN 0
                EXEC SQL
            SELECT CURRENT TIME INTO :H1-ACCOUNT-STATUS FROM
            SYSIBM.SYSDUMMY1
            END-EXEC
            MOVE H1-ACCOUNT-STATUS TO SYS-TIME
            DISPLAY 'TIME'SYS-TIME
            EXEC SQL
            SELECT CURRENT DATE INTO :H1-ACCOUNT-STATUS FROM
            SYSIBM.SYSDUMMY1
            END-EXEC
            MOVE H1-ACCOUNT-STATUS TO SYS-DATE
            DISPLAY 'DATE'SYS-DATE
            MOVE WS-DEBIT-AMOUNT-T TO DEBIT-AMOUNT-RES
                MOVE "AMOUNT DEBITED SUCCESSFULLY" TO MESSAGES
                EXEC CICS RETURN END-EXEC
              WHEN OTHER
                MOVE "AMOUNT DEBIT UNSUCCESSFULL" TO MESSAGES
                EXEC CICS RETURN END-EXEC
           END-EVALUATE.
        9000-MAIN-PARA-EXIT.
           EXIT.
         1000-ERROR-PARA.
           EVALUATE WS-ERROR-CODE
            WHEN 10
             MOVE "CUSTOMER NOT REGISTERED WITH BANK" TO MESSAGES
             EXEC CICS RETURN END-EXEC
            WHEN 20
             MOVE "AMOUNT IS GREATER THAN PAYMENT LMIT" TO MESSAGES
             EXEC CICS RETURN END-EXEC
            WHEN 30
             MOVE "ACCOUNT DOESNT HAVE SUFFIECIENT FUND" TO MESSAGES
             EXEC CICS RETURN END-EXEC
           END-EVALUATE.
         1000-ERROR-PARA-EXIT.
           EXIT.